// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User { 
  id         Int    @id @default(autoincrement())
  username   String   
  emailId    String @unique
  password   String?
  isAdmin    Boolean @default(false)
  adminKey   String?
  groceryBookedList GroceryListBooked[]
  transactionHistory TransactionHistory[]
  createdAt  DateTime @default(now())
  updateAt   DateTime @default(now()) @updatedAt
}

model GroceryList {
  id                 Int @id @default(autoincrement())
  groceryName        String
  groceryPrice       Decimal  @db.Decimal(8,2)
  groceryType        String?
  groceryStockCount  Decimal  @db.Decimal(8,2) @default(0.00)
  createdAt          DateTime @default(now())
  updateAt           DateTime @default(now()) @updatedAt
}

model GroceryListBooked {
  id                     Int @id @default(autoincrement())
  groceryId              Int
  groceryName            String
  groceryPrice           Decimal  @db.Decimal(8,2)
  groceryType            String?
  purchaseQuantity       Decimal  @db.Decimal(8,2)
  groceryPriceByQuantity Decimal  @db.Decimal(8,2)
  transactionId          String
  isPurchaseConfirmed    Boolean @default(false)
  transactionStatus      String @default("Approved")
  userId                 Int
  user                   User @relation(fields: [userId], references: [id])
  createdAt              DateTime @default(now())
  updateAt               DateTime @default(now()) @updatedAt
}

model TransactionHistory {
  id                Int @id @default(autoincrement())
  transactionId     String
  transactionStatus String
  totalAmount       Decimal  @db.Decimal(16,2)
  userId            Int
  user              User @relation(fields: [userId], references: [id])
  createdAt         DateTime @default(now())
  updateAt          DateTime @default(now()) @updatedAt
}